{"version":3,"sources":["logo.svg","components/listItems.js","components/SimpleLineChart.js","components/dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Items","handleChange","event","console","log","_this","props","showTarget","setShowTarget","target","value","classes","this","react_default","a","createElement","ListItem_default","button","FormControl_default","className","formControl","InputLabel_default","htmlFor","Select_default","onChange","displayEmpty","name","inputProps","id","MenuItem_default","deviceList","map","item","index","key","React","Component","withStyles","theme","root","display","flexWrap","margin","spacing","unit","minWidth","selectEmpty","marginTop","SimpleLineChart","state","data","push","title","nextProps","_this2","axios","get","then","res","spo2","bpm","list","i","length","result","setState","_this3","catch","error","Highcharts","setOptions","global","useUTC","options","text","x","style","color","fontSize","rangeSelector","enabled","buttons","type","count","buttonTheme","width","exporting","tooltip","xDateFormat","shared","pointFormat","split","xAxis","dateTimeLabelFormats","day","legend","align","backgroundColor","borderColor","borderWidth","layout","verticalAlign","y","shadow","series","highcharts_react_min_default","highcharts","constructorType","Dashboard","open","handleDrawerOpen","handleDrawerClose","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","aria-label","onClick","menuButton","menuButtonHidden","Menu_default","Typography_default","component","variant","noWrap","Badge_default","badgeContent","Notifications_default","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","List_default","listItems","content","appBarSpacer","chartContainer","components_SimpleLineChart","paddingRight","Object","objectSpread","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","enteringScreen","marginRight","flexGrow","whiteSpace","defineProperty","overflowX","breakpoints","up","height","overflow","tableContainer","h5","marginBottom","App","dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59c537e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  },\n});\n\nclass Items extends React.Component {\n\n  handleChange = event => {\n    console.log(\"prop =\",this.props.showTarget)\n    this.props.setShowTarget(event.target.value)\n  };\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <ListItem button>\n        <FormControl className={classes.formControl}>\n\n          <InputLabel htmlFor=\"age-simple\">Device</InputLabel>\n            <Select\n                  value={this.props.showTarget}\n                  onChange={this.handleChange}\n                  displayEmpty\n                  name=\"Device List\"\n                  inputProps={{\n                    name: 'age',\n                    id: 'age-simple',\n                  }}\n                >\n              <MenuItem value={\"\"}> </MenuItem>\n              {this.props\n                .deviceList\n                .map((item, index) => (\n                <MenuItem value={item} key={item+\"_\"+index}>{item} </MenuItem>\n                ))\n              }     \n            </Select>\n          </FormControl>\n        </ListItem>\n      </div>\n    )\n  }\n};\nexport default withStyles(styles)(Items);","import React from 'react';\nimport HighchartsReact from 'highcharts-react-official'\nimport Highcharts from 'highcharts/highstock'\nimport axios from 'axios';\n\n\nclass SimpleLineChart extends React.Component {\n  state = {\n    data: [],\n    push:[],\n    title:\"\"\n  };\n  \n  componentWillReceiveProps(nextProps){\n    console.log(\"next : \" ,nextProps)\n    axios.get('/db/'+nextProps.target)\n    .then(res => {\n      var spo2=[]\n      var bpm=[]\n      const list = res.data;\n\n      for(var i =0 ;i<list.length;i++){\n        spo2.push([list[i][\"time\"],list[i][\"spo2\"]])\n        bpm.push([list[i][\"time\"],list[i][\"bpm\"]])\n      }\n      // var result=[{name:\"Spo2\",data:spo2},{name:\"Bpm\",data:bpm}]\n      var result=[{name:\"Spo2\",data:spo2}]\n\n      console.log(result)\n      this.setState({ data:result,title:nextProps.target });\n      console.log(\"now:\",this.state.data)\n\n\n    })\n  }\n  componentWillMount(){\n    axios.get('/db/'+this.props.target)\n    .then(res => {\n      var spo2=[]\n      var bpm=[]\n      const list = res.data;\n\n      for(var i =0 ;i<list.length;i++){\n        spo2.push([list[i][\"time\"],list[i][\"spo2\"]])\n        bpm.push([list[i][\"time\"],list[i][\"bpm\"]])\n      }\n      // var result=[{name:\"Spo2\",data:spo2},{name:\"Bpm\",data:bpm}]\n      var result=[{name:\"Spo2\",data:spo2}]\n      console.log(result)\n      this.setState({ data:result,title:this.props.target });\n      console.log(\"now:\",this.state.data)\n\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n  };\n\n  render() {\n    var global={\n      global: { useUTC: false } ,\n\n    }\n    Highcharts.setOptions({ global: { useUTC: false, } });\n    var options = {\n      title: { text:this.state.title, x: -20, style: { color: '#66cd00', fontSize: '36px' }},\n                rangeSelector: {\n                  enabled:true,\n                  buttons: [{ type: 'hour', count: 1, text: 'Hour' },\n                  { type: 'day', count: 1, text: 'Day'},\n                  { type: 'day', count: 7, text: 'Week'},\n                  { type: 'day', count: 30, text: 'Month' },\n                  { type: 'year', count: 1, text: 'Year' },\n                  { type: 'all', text: 'All'}],\n                  buttonTheme: { width: 50 },},\n                  exporting: { enabled: false },\n                  tooltip: { \n                    xDateFormat:'%Y-%m-%d %H:%M:%S',\n                    shared: true, pointFormat: ' {series.name}: <b>{point.y}</b> mmHg<br/>',split: true},\n          \n                    xAxis: {    \n                      type: 'datetime',\n                      dateTimeLabelFormats: {\n                     day: '%Y/%m/%d'    //ex- 01 Jan 2016\n                   }\n                 },\n          \n                 legend: {\n                  enabled: true,\n                  align: 'right',\n                  backgroundColor: '#FCFFC5',\n                  borderColor: 'black',\n                  borderWidth: 2,\n                  layout: 'vertical',\n                  verticalAlign: 'top',\n                  y: 100,\n                  shadow: true\n                },\n                series: this.state.data\n      \n    };\n\n    \n    return (\n      <HighchartsReact highcharts={Highcharts}\n        constructorType={'stockChart'}\n        options={options} setOptions={global}></HighchartsReact>\n    );\n  }\n}\n\nexport default SimpleLineChart;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Items from './listItems';\nimport SimpleLineChart from './SimpleLineChart.js';\nimport axios from 'axios';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  chartContainer: {\n    marginLeft: -22,\n  },\n  tableContainer: {\n    height: 320,\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n});\n\nclass Dashboard extends React.Component {\n  state = {\n    open: true,\n    deviceList:[],\n    showTarget:[]\n  };\n\n  componentDidMount() {\n    axios.get('/id/list')\n      .then(res => {\n        const list = res.data;\n        this.setState({ deviceList:list });\n      })\n  }\n\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  setShowTarget=(target)=>{\n    this.setState({showTarget:[target]})\n  }\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n        >\n          <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(\n                classes.menuButton,\n                this.state.open && classes.menuButtonHidden,\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Dashboard\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n          }}\n          open={this.state.open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List><Items deviceList={this.state.deviceList} showTarget={this.state.showTarget} setShowTarget={this.setShowTarget}></Items></List>\n\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Typography component=\"div\" className={classes.chartContainer}>\n\n            {this.state\n                .showTarget\n                .map((item, index) => (\n                <SimpleLineChart target={item} key={index}></SimpleLineChart>\n                ))\n              }   \n          </Typography>\n\n\n        </main>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dashboard);","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './components/dashboard'\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Dashboard/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}